% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/line2poly.R
\name{line2poly}
\alias{line2poly}
\title{line2poly}
\usage{
line2poly(obj, bbox)
}
\arguments{
\item{obj}{A Simple Features (\code{sf}) data frame of lines, typically as
returned by \code{\link{extract_osm_objects}}, or by
\code{osmdata::osmdata_sf}.}

\item{bbox}{bounding box (Latitude-longitude range) to be plotted.  A 2-by-2
matrix of 4 elements with columns of min and max values, and rows of x and y
values. Can also be an object of class \code{sf}, for example as returned
from \code{extract_osm_objects} or the \code{osmdata} package, in which case
the bounding box will be extracted from the object coordinates.}
}
\value{
A list of two Simple Features (\code{sf}) data frames, each
containing one polygon created by connecting the end points of \code{obj} to
the corresponding extrema of \code{bbox}.
}
\description{
Converts \code{sf::sfc_LINSTRING} objects to polygons by connecting end
points around the given bounding box. This is particularly useful for
plotting water and land delineated by coastlines. Coastlines in OpenStreetMap
are lines, not polygons, and so there is no directly way to plot ocean water
distinct from land. This function enables that by connecting the end points
of coastline \code{LINESTRING} objects to form closed polygons.
}
\details{
The function always returns two polygons. In the case of coastlines, one will
represent the ocean; the other the land; and it will be up to the user to
determine which is which.
}
\examples{
# This example uses the \\code{osmdata} package to extract data from 
# a named bounding box
\dontrun{
library (magrittr)
library (osmdata)
bb <- getbb ("melbourne, australia")
coast <- opq (bb) \%>\%
    add_osm_feature (key = "natural", value = "coastline") \%>\%
    osmdata_sf ()
coast <- line2poly (coast$osm_lines, bbox = bb)
# The following map then colours in just the ocean:
map <- osm_basemap (bbox = bb) \%>\%
    add_osm_objects (coast [[1]], col = "lightsteelblue") \%>\%
    print_osm_map ()
}
}
